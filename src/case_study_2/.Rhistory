# config time axis
t = spec$t
max_freq = 25
eind <- ceiling(nrow(P) * max_freq / 25)
# plot spectrogram
imagep(x = t,
y = spec$f[1:eind],
z = t(P[1:eind,]),
col = oce.colorsViridis,
ylab = 'Frequency [Hz]',
xlab = 'Time [s]',
zlab = paste(title0,axs,dive,"max intensity",max_P),
zlim = c(-12,12),
drawPalette = T,
decimate = F
)
}
}
dev.off()
for(i in c(1,2)){
if(i == 1){
dives = neg_dives
title0 = "neg dive"
} else {
dives = pos_dives
title0 = "pos dive"
}
for(dive in dives){
df <- rawData[rawData$divenum == dive,]
df$d_elev <- c(NA,diff(stats::filter(df$elev, rep(1 / 25, 25), sides = 2)))
df <- df %>% pivot_longer(cols = cols_to_plot,
names_to = "feature")
df$Time <- df$Time - min(df$Time)
plot1 <- ggplot(df,aes(x=Time, y=value)) +
geom_line() +
geom_hline(yintercept = 0) +
labs(color="", y="",
x="Elapsed time (seconds)",
title=paste(title0,dive)) +
theme_classic() +
theme(strip.background = element_blank(),
strip.placement = "outside",
text = element_text(size=16)) +
facet_wrap(~feature, ncol = 1, scales = "free_y")
print(plot1)
for(axs in c()){#cols_to_plot){
acc <- rawData[rawData$divenum == dive,axs]
# create spectrogram
spec = specgram(x = acc,
n = 256,
Fs = 50
)
# discard phase information
P = abs(spec$S)
# normalize
max_P <- max(P)
#P = P/max_P
# convert to dB
P = 10*log10(P)
# config time axis
t = spec$t
max_freq = 25
eind <- ceiling(nrow(P) * max_freq / 25)
# plot spectrogram
imagep(x = t,
y = spec$f[1:eind],
z = t(P[1:eind,]),
col = oce.colorsViridis,
ylab = 'Frequency [Hz]',
xlab = 'Time [s]',
zlab = paste(title0,axs,dive,"max intensity",max_P),
zlim = c(-12,12),
drawPalette = T,
decimate = F
)
}
}
}
dives <- unique(Data$divenum[Data$maxDepth > 50 & Data$vstate == 3])
# import raw Data
rawData <- data.frame(fread('../../../dat/Final_rawData_Beth.csv'))
rawData <- rawData[rawData$divenum %in% c(pos_dives,neg_dives),]
rawData$elev <- -rawData$p
#cols_to_plot <- c("head","pitch","roll","elev")
#cols_to_plot <- c("Aw_1","Aw_2","Aw_3","elev")
#cols_to_plot <- c("dyn.aw1","dyn.aw2","dyn.aw3","elev")
cols_to_plot <- c("VeDBA","elev","d_elev")
for(i in c(1,2)){
if(i == 1){
dives = neg_dives
title0 = "neg dive"
} else {
dives = pos_dives
title0 = "pos dive"
}
for(dive in dives){
df <- rawData[rawData$divenum == dive,]
df$d_elev <- c(NA,diff(stats::filter(df$elev, rep(1 / 50, 50), sides = 2)))
df <- df %>% pivot_longer(cols = cols_to_plot,
names_to = "feature")
df$Time <- df$Time - min(df$Time)
plot1 <- ggplot(df,aes(x=Time, y=value)) +
geom_line() +
geom_hline(yintercept = 0) +
labs(color="", y="",
x="Elapsed time (seconds)",
title=paste(title0,dive)) +
theme_classic() +
theme(strip.background = element_blank(),
strip.placement = "outside",
text = element_text(size=16)) +
facet_wrap(~feature, ncol = 1, scales = "free_y")
print(plot1)
for(axs in c()){#cols_to_plot){
acc <- rawData[rawData$divenum == dive,axs]
# create spectrogram
spec = specgram(x = acc,
n = 256,
Fs = 50
)
# discard phase information
P = abs(spec$S)
# normalize
max_P <- max(P)
#P = P/max_P
# convert to dB
P = 10*log10(P)
# config time axis
t = spec$t
max_freq = 25
eind <- ceiling(nrow(P) * max_freq / 25)
# plot spectrogram
imagep(x = t,
y = spec$f[1:eind],
z = t(P[1:eind,]),
col = oce.colorsViridis,
ylab = 'Frequency [Hz]',
xlab = 'Time [s]',
zlab = paste(title0,axs,dive,"max intensity",max_P),
zlim = c(-12,12),
drawPalette = T,
decimate = F
)
}
}
}
divesa
dives
dives <- unique(Data$divenum[Data$maxDepth > 50 & Data$vstate == 3])
dives
if(i == 1){
dives0 = neg_dives
title0 = "neg dive"
} else if (i == 2) {
dives0 = pos_dives
title0 = "pos dive"
} else {
dives0 = setdiff(dives, c(pos_dives,neg_dives))
}
dives0
<- 3
i <- 3
if(i == 1){
dives0 = neg_dives
title0 = "neg dive"
} else if (i == 2) {
dives0 = pos_dives
title0 = "pos dive"
} else {
dives0 = setdiff(dives, c(pos_dives,neg_dives))
}
dives0
for(dive in dives0){
df <- rawData[rawData$divenum == dive,]
df$d_elev <- c(NA,diff(stats::filter(df$elev, rep(1 / 50, 50), sides = 2)))
df <- df %>% pivot_longer(cols = cols_to_plot,
names_to = "feature")
df$Time <- df$Time - min(df$Time)
plot1 <- ggplot(df,aes(x=Time, y=value)) +
geom_line() +
geom_hline(yintercept = 0) +
labs(color="", y="",
x="Elapsed time (seconds)",
title=paste(title0,dive)) +
theme_classic() +
theme(strip.background = element_blank(),
strip.placement = "outside",
text = element_text(size=16)) +
facet_wrap(~feature, ncol = 1, scales = "free_y")
print(plot1)
for(axs in c()){#cols_to_plot){
acc <- rawData[rawData$divenum == dive,axs]
# create spectrogram
spec = specgram(x = acc,
n = 256,
Fs = 50
)
# discard phase information
P = abs(spec$S)
# normalize
max_P <- max(P)
#P = P/max_P
# convert to dB
P = 10*log10(P)
# config time axis
t = spec$t
max_freq = 25
eind <- ceiling(nrow(P) * max_freq / 25)
# plot spectrogram
imagep(x = t,
y = spec$f[1:eind],
z = t(P[1:eind,]),
col = oce.colorsViridis,
ylab = 'Frequency [Hz]',
xlab = 'Time [s]',
zlab = paste(title0,axs,dive,"max intensity",max_P),
zlim = c(-12,12),
drawPalette = T,
decimate = F
)
}
}
dive
df <- rawData[rawData$divenum == dive,]
df
dives
plot_raw = T
if(plot_raw){
# import raw Data
rawData <- data.frame(fread('../../../dat/Final_rawData_Beth.csv'))
rawData <- rawData[rawData$divenum %in% dives]
rawData$elev <- -rawData$p
# make seperate dataframe for ggplot
#cols_to_plot <- c("head","pitch","roll","elev")
#cols_to_plot <- c("Aw_1","Aw_2","Aw_3","elev")
#cols_to_plot <- c("dyn.aw1","dyn.aw2","dyn.aw3","elev")
cols_to_plot <- c("VeDBA","elev","d_elev")
for(i in c(1,2,3)){
if(i == 1){
dives0 = neg_dives
title0 = "neg dive"
} else if (i == 2) {
dives0 = pos_dives
title0 = "pos dive"
} else {
dives0 = setdiff(dives, c(pos_dives,neg_dives))
}
for(dive in dives0){
df <- rawData[rawData$divenum == dive,]
df$d_elev <- c(NA,diff(stats::filter(df$elev, rep(1 / 50, 50), sides = 2)))
df <- df %>% pivot_longer(cols = cols_to_plot,
names_to = "feature")
df$Time <- df$Time - min(df$Time)
plot1 <- ggplot(df,aes(x=Time, y=value)) +
geom_line() +
geom_hline(yintercept = 0) +
labs(color="", y="",
x="Elapsed time (seconds)",
title=paste(title0,dive)) +
theme_classic() +
theme(strip.background = element_blank(),
strip.placement = "outside",
text = element_text(size=16)) +
facet_wrap(~feature, ncol = 1, scales = "free_y")
print(plot1)
for(axs in c()){#cols_to_plot){
acc <- rawData[rawData$divenum == dive,axs]
# create spectrogram
spec = specgram(x = acc,
n = 256,
Fs = 50
)
# discard phase information
P = abs(spec$S)
# normalize
max_P <- max(P)
#P = P/max_P
# convert to dB
P = 10*log10(P)
# config time axis
t = spec$t
max_freq = 25
eind <- ceiling(nrow(P) * max_freq / 25)
# plot spectrogram
imagep(x = t,
y = spec$f[1:eind],
z = t(P[1:eind,]),
col = oce.colorsViridis,
ylab = 'Frequency [Hz]',
xlab = 'Time [s]',
zlab = paste(title0,axs,dive,"max intensity",max_P),
zlim = c(-12,12),
drawPalette = T,
decimate = F
)
}
}
}
}
if(plot_raw){
# import raw Data
rawData <- data.frame(fread('../../../dat/Final_rawData_Beth.csv'))
rawData <- rawData[rawData$divenum %in% dives]
rawData$elev <- -rawData$p
# make seperate dataframe for ggplot
#cols_to_plot <- c("head","pitch","roll","elev")
#cols_to_plot <- c("Aw_1","Aw_2","Aw_3","elev")
#cols_to_plot <- c("dyn.aw1","dyn.aw2","dyn.aw3","elev")
cols_to_plot <- c("VeDBA","elev","d_elev")
for(i in c(1,2,3)){
if(i == 1){
dives0 = neg_dives
title0 = "neg dive"
} else if (i == 2) {
dives0 = pos_dives
title0 = "pos dive"
} else {
dives0 = setdiff(dives, c(pos_dives,neg_dives))
}
for(dive in dives0){
df <- rawData[rawData$divenum == dive,]
df$d_elev <- c(NA,diff(stats::filter(df$elev, rep(1 / 50, 50), sides = 2)))
df <- df %>% pivot_longer(cols = cols_to_plot,
names_to = "feature")
df$Time <- df$Time - min(df$Time)
plot1 <- ggplot(df,aes(x=Time, y=value)) +
geom_line() +
geom_hline(yintercept = 0) +
labs(color="", y="",
x="Elapsed time (seconds)",
title=paste(title0,dive)) +
theme_classic() +
theme(strip.background = element_blank(),
strip.placement = "outside",
text = element_text(size=16)) +
facet_wrap(~feature, ncol = 1, scales = "free_y")
print(plot1)
for(axs in c()){#cols_to_plot){
acc <- rawData[rawData$divenum == dive,axs]
# create spectrogram
spec = specgram(x = acc,
n = 256,
Fs = 50
)
# discard phase information
P = abs(spec$S)
# normalize
max_P <- max(P)
#P = P/max_P
# convert to dB
P = 10*log10(P)
# config time axis
t = spec$t
max_freq = 25
eind <- ceiling(nrow(P) * max_freq / 25)
# plot spectrogram
imagep(x = t,
y = spec$f[1:eind],
z = t(P[1:eind,]),
col = oce.colorsViridis,
ylab = 'Frequency [Hz]',
xlab = 'Time [s]',
zlab = paste(title0,axs,dive,"max intensity",max_P),
zlim = c(-12,12),
drawPalette = T,
decimate = F
)
}
}
}
}
rawData <- rawData[rawData$divenum %in% dives,]
rawData$elev <- -rawData$p
#cols_to_plot <- c("head","pitch","roll","elev")
#cols_to_plot <- c("Aw_1","Aw_2","Aw_3","elev")
#cols_to_plot <- c("dyn.aw1","dyn.aw2","dyn.aw3","elev")
cols_to_plot <- c("VeDBA","elev","d_elev")
for(i in c(1,2,3)){
if(i == 1){
dives0 = neg_dives
title0 = "neg dive"
} else if (i == 2) {
dives0 = pos_dives
title0 = "pos dive"
} else {
dives0 = setdiff(dives, c(pos_dives,neg_dives))
}
for(dive in dives0){
df <- rawData[rawData$divenum == dive,]
df$d_elev <- c(NA,diff(stats::filter(df$elev, rep(1 / 50, 50), sides = 2)))
df <- df %>% pivot_longer(cols = cols_to_plot,
names_to = "feature")
df$Time <- df$Time - min(df$Time)
plot1 <- ggplot(df,aes(x=Time, y=value)) +
geom_line() +
geom_hline(yintercept = 0) +
labs(color="", y="",
x="Elapsed time (seconds)",
title=paste(title0,dive)) +
theme_classic() +
theme(strip.background = element_blank(),
strip.placement = "outside",
text = element_text(size=16)) +
facet_wrap(~feature, ncol = 1, scales = "free_y")
print(plot1)
for(axs in c()){#cols_to_plot){
acc <- rawData[rawData$divenum == dive,axs]
# create spectrogram
spec = specgram(x = acc,
n = 256,
Fs = 50
)
# discard phase information
P = abs(spec$S)
# normalize
max_P <- max(P)
#P = P/max_P
# convert to dB
P = 10*log10(P)
# config time axis
t = spec$t
max_freq = 25
eind <- ceiling(nrow(P) * max_freq / 25)
# plot spectrogram
imagep(x = t,
y = spec$f[1:eind],
z = t(P[1:eind,]),
col = oce.colorsViridis,
ylab = 'Frequency [Hz]',
xlab = 'Time [s]',
zlab = paste(title0,axs,dive,"max intensity",max_P),
zlim = c(-12,12),
drawPalette = T,
decimate = F
)
}
}
}
dev.off()
if(plot_raw){
# import raw Data
rawData <- data.frame(fread('../../../dat/Final_rawData_Beth.csv'))
rawData <- rawData[rawData$divenum %in% dives,]
rawData$elev <- -rawData$p
# make seperate dataframe for ggplot
#cols_to_plot <- c("head","pitch","roll","elev")
#cols_to_plot <- c("Aw_1","Aw_2","Aw_3","elev")
#cols_to_plot <- c("dyn.aw1","dyn.aw2","dyn.aw3","elev")
cols_to_plot <- c("VeDBA","elev","d_elev")
for(i in c(1,2,3)){
if(i == 1){
dives0 = neg_dives
title0 = "neg dive"
} else if (i == 2) {
dives0 = pos_dives
title0 = "pos dive"
} else {
dives0 = setdiff(dives, c(pos_dives,neg_dives))
title0 = "NA dive"
}
for(dive in dives0){
df <- rawData[rawData$divenum == dive,]
df$d_elev <- c(NA,diff(stats::filter(df$elev, rep(1 / 50, 50), sides = 2)))
df <- df %>% pivot_longer(cols = cols_to_plot,
names_to = "feature")
df$Time <- df$Time - min(df$Time)
plot1 <- ggplot(df,aes(x=Time, y=value)) +
geom_line() +
geom_hline(yintercept = 0) +
labs(color="", y="",
x="Elapsed time (seconds)",
title=paste(title0,dive)) +
theme_classic() +
theme(strip.background = element_blank(),
strip.placement = "outside",
text = element_text(size=16)) +
facet_wrap(~feature, ncol = 1, scales = "free_y")
print(plot1)
for(axs in c()){#cols_to_plot){
acc <- rawData[rawData$divenum == dive,axs]
# create spectrogram
spec = specgram(x = acc,
n = 256,
Fs = 50
)
# discard phase information
P = abs(spec$S)
# normalize
max_P <- max(P)
#P = P/max_P
# convert to dB
P = 10*log10(P)
# config time axis
t = spec$t
max_freq = 25
eind <- ceiling(nrow(P) * max_freq / 25)
# plot spectrogram
imagep(x = t,
y = spec$f[1:eind],
z = t(P[1:eind,]),
col = oce.colorsViridis,
ylab = 'Frequency [Hz]',
xlab = 'Time [s]',
zlab = paste(title0,axs,dive,"max intensity",max_P),
zlim = c(-12,12),
drawPalette = T,
decimate = F
)
}
}
}
}
